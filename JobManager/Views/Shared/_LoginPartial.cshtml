@using JobManager.Data;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var isLoggedIn = SignInManager.IsSignedIn(User);
    var isSignedIn = SignInManager.IsSignedIn(User);
    var isSuperAdmin = User.IsInRole("SuperAdmin");
    var isAdmin = User.IsInRole("Admin");
    //var isLeavingPolicy = await authorizationService.AuthorizeAsync(User, "LeavingCertificatePolicy");
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
        </li>
    }
    else
    {
        @if (isLoggedIn && (isAdmin))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
        }

   
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
